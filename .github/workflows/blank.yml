# This is a basic workflow to help you get started with Actions

name: Discord Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # before-build to notify the discord about the push
  push-notification:
    runs-on: ubuntu-latest
    steps:
      - name: "Discord push notification"
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "PUSH"
          color: 0x1616ba
          username: GitHub Actions
          
  # build job to perform the neccessary actions
  build:
    needs: push-notification
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: "Discord push notification - Success"
        uses: sarisia/actions-status-discord@v1
        if: success()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "Build"
          description: "Successful build!"
          color: 0x15b325
          username: GitHub Actions

      - name: "Discord push notification - Fail"
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "Build"
          description: "Failed build!"
          color: 0xe31414
          username: GitHub Actions
